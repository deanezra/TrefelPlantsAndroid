apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: "kotlin-kapt"

apply plugin: 'dagger.hilt.android.plugin'

// Pull out our Trefle API token from our local.properties file so it can be used in the app:
def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    defaultConfig {
        applicationId "com.deanezra.trefleplants"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
        multiDexEnabled true

        // Expose the api token that is stored in local.properties via BuildConfig.API_TOKEN:
        buildConfigField("String", "API_TOKEN", "\"" + localProperties['apiToken'] + "\"")
    }
    buildTypes {
        debug {
            // Expose the api token that is stored in local.properties via BuildConfig.API_TOKEN:
            buildConfigField("String", "API_TOKEN", "\"" + localProperties['apiToken'] + "\"")
        }
        release {
            // Expose the api token via BuildConfig.API_TOKEN:
            buildConfigField("String", "API_TOKEN", "\"" + localProperties['apiToken'] + "\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // Allow us to get past the DEX limit (e.g. avoid cant fit requested classes in single dex file):
    implementation 'androidx.multidex:multidex:2.0.1'

    // Activity KTX for easy viewModel retrieval:
    implementation "androidx.activity:activity-ktx:1.2.1"

    // Dependency Injection(DI): Dagger Hilt (the new wrapper around Dagger2):
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0-beta01"

    implementation 'android.arch.lifecycle:extensions:1.1.1'

    // Unit testing related:
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'org.json:json:20180813'

    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.4'

    // Mock server for mocking out Retrofit2 responses in tests:
    //for testing retrofit.
    testImplementation("com.squareup.okhttp3:mockwebserver:4.7.2")

    // Mockk
    testImplementation("io.mockk:mockk:1.10.6")

    // Roboelectric implements some of the Android specific class so we can use them in JVM based
    // Unit tests
    testImplementation 'org.robolectric:robolectric:4.4'

    // Google Room DB API
    implementation "androidx.room:room-runtime:2.2.2"
    kapt "androidx.room:room-compiler:2.2.2"

    //retrofit 2
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    // gson convertor
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    // recycle view
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // material design
    implementation 'com.google.android.material:material:1.3.0'

    // glide image loader
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'
}
